ext {
    def PUBLISH_PROPERTIES = "publish.properties"
    def PUBLISH_REPO_NAME = "repo.name"
    def PUBLISH_REPO_URL = "repo.url"
    def PUBLISH_GROUP_ID = "groupId"
    def PUBLISH_ARTIFACT_ID = "artifactId"
    def PUBLISH_ARTIFACT = "artifact"
    def PUBLISH_VERSION = "version"

    def LOCAL_PROPERTIES = "local.properties"
    def LOCAL_PUBLISHER_USERNAME = "github.username"
    def LOCAL_PUBLISHER_TOKEN = "github.token"
    def GITHUB_ACTIONS_PUBLISHER_USERNAME = "GITHUB_ACTOR"
    def GITHUB_ACTIONS_PUBLISHER_TOKEN = "GITHUB_TOKEN"

    getPublisherProperties = { projectDir ->
        Properties properties = new Properties()
        File propertiesFile = new File("$projectDir/$PUBLISH_PROPERTIES")
        if (propertiesFile.exists()) {
            propertiesFile.withInputStream {properties.load(it)}
        }
        return properties
    }

    getPublishProperty = { project, property ->
        def value = getPublisherProperties(project.projectDir.path).getProperty(property) ?: ""
        println("$project $PUBLISH_PROPERTIES -> $property = $value")
        return value
    }

    getPublishRepoName = { projectDir ->
        return getPublishProperty(projectDir, PUBLISH_REPO_NAME)
    }

    getPublishRepoUrl = { projectDir ->
        return getPublishProperty(projectDir, PUBLISH_REPO_URL)
    }

    getPublishGroupId = { projectDir ->
        return getPublishProperty(projectDir, PUBLISH_GROUP_ID)
    }

    getPublishArtifactId = { projectDir ->
        return getPublishProperty(projectDir, PUBLISH_ARTIFACT_ID)
    }

    getPublishArtifact = { projectDir ->
        def path = "$buildDir${getPublishProperty(projectDir, PUBLISH_ARTIFACT)}"
        return path
    }

    getPublishVersion = { projectDir ->
        getPublishProperty(projectDir, PUBLISH_VERSION)
    }



    getLocalProperties = { projectDir ->
        Properties properties = new Properties()
        File propertiesFile = new File("$projectDir/$LOCAL_PROPERTIES")
        if (propertiesFile.exists()) {
            propertiesFile.withInputStream {properties.load(it)}
        }
        return properties
    }

    getLocalProperty = { project, property ->
        return getLocalProperties(project.projectDir.path).getProperty(property) ?: ""
    }

    getPublisherUsername = { project ->
        return getLocalProperty(project, LOCAL_PUBLISHER_USERNAME) ?: System.getenv(GITHUB_ACTIONS_PUBLISHER_USERNAME)
    }

    getPublisherPassword = { project ->
        return getLocalProperty(project, LOCAL_PUBLISHER_TOKEN) ?: System.getenv(GITHUB_ACTIONS_PUBLISHER_TOKEN)
    }
}